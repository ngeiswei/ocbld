#!/bin/bash

# Tool for cleaning, building and installing atomspace repositories

# set -x

#############
# Constants #
#############

OC_DIR=~/OpenCog
NJOBS=4

#############
# Functions #
#############

# Info level logging
infoEcho() {
    echo "[INFO] $@"
}

# Warning level logging on stderr
warning() {
    echo "[WARN] $@" 1>&2
}

# Error level logging on stderr and exit
fatalError() {
    echo "[ERROR] $@" 1>&2
    exit 1
}

parse_opt() {
    case $1 in
        uninstall)
            infoEcho "Uninstall OpenCog from system"
            uninstall
            ;;
        clean)
            infoEcho "Enable clean"
            CLEAN=yes
            ;;
        clear)
            infoEcho "Enable clean"
            CLEAN=yes
            ;;
        debug)
            infoEcho "Enable debug"
            DEBUG=yes
            ;;
        cogutil)
            infoEcho "Build cogutil"
            cogutil
            ;;
        atomspace)
            infoEcho "Build atomspace"
            atomspace
            ;;
        ure)
            infoEcho "Build ure"
            ure
            ;;
        miner)
            infoEcho "Build miner"
            miner
            ;;
        pln)
            infoEcho "Build pln"
            pln
            ;;
        moses)
            infoEcho "Build moses"
            moses
            ;;
        asmoses)
            infoEcho "Build asmoses"
            asmoses
            ;;
        distributional-value)
            infoEcho "Build distributional-value"
            distvalue
            ;;
        cogserver)
            infoEcho "Build cogserver"
            cogserver
            ;;
        attention)
            infoEcho "Build attention"
            attention
            ;;
        opencog)
            infoEcho "Build opencog"
            opencog
            ;;
        agi-bio)
            infoEcho "Build agi-bio"
            agibio
            ;;
        *)
    esac
}

uninstall() {
    sudo rm -fr /usr/local/include/opencog
    sudo rm -fr /usr/local/share/opencog
    sudo rm -fr /usr/local/lib/opencog
    sudo rm -fr /usr/local/etc/opencog*
    sudo rm -fr /usr/share/guile/site/2.2/opencog*
    sudo rm -fr /usr/local/share/guile/site/2.2/opencog*
    sudo rm -fr /usr/local/lib/python*/dist-packages/opencog
    sudo rm -fr /usr/local/lib/cmake/CogUtil
    sudo rm -fr /usr/local/lib/cmake/Moses
    sudo rm -fr /usr/local/lib/cmake/AtomSpace
    sudo rm -fr /usr/local/lib/cmake/ASMoses
    sudo rm -fr /usr/local/lib/cmake/URE
    sudo rm -fr /usr/local/lib/cmake/AttentionBank
    sudo rm -fr /usr/local/lib/cmake/CogServer
    sudo rm -fr /usr/local/lib/cmake/PLN
    rm -fr ~/.cache/guile
}

build() {
    # Build and install the current repository
    if [[ $DEBUG == yes ]]; then
        local BUILD_DIR=build-debug
    else
        local BUILD_DIR=build
    fi
    if [[ $CLEAN == yes ]]; then
        rm -fr "$BUILD_DIR"
    fi
    mkdir "$BUILD_DIR" &> /dev/null
    cd "$BUILD_DIR"
    if [[ $DEBUG == yes ]]; then
        cmake .. -DCMAKE_BUILD_TYPE=Debug
    else
        cmake ..
    fi
    make -j${NJOBS} && sudo make install
    cd ..

    # Update ldconfig, just in case
    sudo ldconfig /usr/local/lib/opencog

    # Update RTags index
    if [ -x "$(command -v rc)" ]; then
        infoEcho "Update RTags"
        cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=1 "$BUILD_DIR"
        rc -J $BUILD_DIR
    fi
}

cogutil() {
    cd "$OC_DIR/cogutil"
    build
    cd ..
}

atomspace() {
    cd "$OC_DIR/atomspace"
    build
    cd ..
}

ure() {
    cd "$OC_DIR/ure"
    build
    cd ..
}

miner() {
    cd "$OC_DIR/miner"
    build
    cd ..
}

pln() {
    cd "$OC_DIR/pln"
    build
    cd ..
}

moses() {
    cd "$OC_DIR/moses"
    build
    cd ..
}

asmoses() {
    cd "$OC_DIR/asmoses"
    build
    cd ..
}

distvalue() {
    cd "$OC_DIR/distributional-value"
    build
    cd ..
}

cogserver() {
    cd "$OC_DIR/cogserver"
    build
    cd ..
}

attention() {
    cd "$OC_DIR/attention"
    build
    cd ..
}

opencog() {
    cd "$OC_DIR/opencog"
    build
    cd ..
}

agibio() {
    cd "$OC_DIR/agi-bio"
    build
    cd ..
}

########
# Main #
########

if [[ $# == 0 ]]; then
    echo "Wrong number of arguments"
    echo "Usage: $0 [uninstall] [clean] [debug] [cogutil] [atomspace] [ure] [miner] [pln] [moses] [asmoses] [distributional-value] [cogserver] [attention] [opencog] [agi-bio]"
    echo "uninstall: uninstall opencog from system"
    echo "clean: clean building directory before building"
    echo "debug: build in Debug mode"
    echo "cogutil|...|opencog: build and install the given component(s)"
    exit 1
fi

for arg in "$@"; do
    parse_opt "$arg"
done
